plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}


//*************
// Global
//*************
allprojects {
	apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    group = project.maven_group

    configurations {
        includeTransitive {
            transitive = true
        }
    }

    repositories {
        mavenCentral()
        maven {
            url = "https://mvnrepository.com/"
        }
    }

    dependencies {
        // JUnit Jupiter for testing
        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

        // spotbugs
        compileOnly "com.github.spotbugs:spotbugs:${project.spotbugs_version}"
    }

    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"
    }

    tasks.named('test') {
        // Use JUnit Platform for unit tests.
        useJUnitPlatform()
    }

    shadowJar {
        configurations = [project.configurations.shadow]
        archiveClassifier.set("")
    }
}


configure(subprojects.findAll {it.name != 'modget-manifest-api-base'} ) {
    dependencies {
        shadow implementation(project(":modget-manifest-api-base"))
    }
}

//*************
// Main build
//*************
archivesBaseName = project.archives_base_name
version = project.version


dependencies {
    shadow implementation(project(":modget-manifest-api-compat"))
    shadow implementation(project(":modget-manifest-api-spec3"))
    shadow api(project(":modget-manifest-api-spec4"))
}


publishing {
	publications {
		mavenJava(MavenPublication) {
            artifact(shadowJar) {
                builtBy shadowJar
            }
        }
    }

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            mavenLocal()
        }
    }
}
